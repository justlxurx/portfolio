const programs = () => {
  return [
    {
      id1: `collapsed2`,
      id2: `Demo2`,
      title: "Модуль 2",
      //   topic1: `> Основы React`,
      //   topic2: `> Способы подключения React к проекту`,
      //   topic3: `> Знакомство с JSX `,
      //   topic4: `> Виды компонентов`,
      //   topic5: `> Стилизация компонентов`,
      //   topic6: `> Обмен данными в приложении`,
      //   topic7: `> Обработка событий`,
      //   topic8: `> Жизненный цикл компонентов`,
      //   topic9: `> Работа с API`,
      //   topic10: `> Работа с формами`,
      //   topic11: `> Компонент Error Boundaries (Обработка ошибок)`,
      topics: `> Основы React

> Способы подключения React к проекту

> Знакомство с JSX 

> Виды компонентов

> Стилизация компонентов

> Обмен данными в приложении

> Обработка событий

> Жизненный цикл компонентов

> Работа с API

> Работа с формами

> Компонент Error Boundaries (Обработка ошибок)`,
      description:
        "В модуле вы изучите основы JavaScript-библиотеки React, которая позволяет создавать интерфейсы. Разберемся, как подключать React к своим проектам через различные методы, изучим JSX, научимся работать с состоянием, обрабатывать события, а также получать и отправлять данные на сервер.",
    },
    {
      id1: `collapsed3`,
      id2: `Demo3`,
      title: "Модуль 3",
      topics: `> React Hooks

> Кастомные Hooks

> Рефы

> useState, useEffects, useContext, для управления состоянием и выполнения побочных эффектов`,
      description:
        'React Hooks – это своего рода магия, которая позволит нам удобно работать с состоянием и взаимодействовать с данными в наших React-проектах. Мы разберемся с разными видами "крючков" - таких как useState, useEffect и useContext, которые позволят без труда контролировать информацию и внедрять полезные функции в ваши веб-приложения. Этот модуль расширит ваши навыки и позволит создавать более современные и гибкие приложения на React.',
    },
    {
      id1: `collapsed4`,
      id2: `Demo4`,
      title: "Модуль 4",
      topics: `> Продвинутое управление состоянием приложения

> React context

> Архитектура Flux

> Hooks useReducer

> Знакомство с библиотекой Redux

> Знакомство с библиотекой MobX`,
      description:
        "В этом модуле мы рассмотрим разные методы и инструменты для более эффективного контроля состояния вашего приложения в React. Познакомимся с разными подходами и инструментами, которые помогут выбрать наилучший способ управления состоянием в ваших проектах. Это поможет организовать код наиболее оптимальным образом, обеспечивая масштабируемость и улучшение производительности в ваших React-приложениях.",
    },
    {
      id1: `collapsed5`,
      id2: `Demo5`,
      title: "Модуль 5",
      topics: `> Продвинутые концепции

> Асинхронные запросы к API

> Анимация

> Принципы интеграции с другими JS-библиотеками

> Изучения работы React “под капотом”`,
      description:
        "Многие веб-приложения должны взаимодействовать с разными данными. В этом модуле мы научимся выполнять запросы к внешним источникам данных, что позволит получать информацию с других серверов. А также углубимся в создание анимаций, что сделает наши интерфейсы более привлекательными. Наконец, изучим, как React взаимодействует с виртуальным DOM для более эффективного обновления приложений.",
    },
    {
      title: "Модуль 6",
      topics: "> Soft skills/job interview",
      description:
        "Никакие технические навыки могут и не пригодится, если у разработчика нет Soft skills. В последнем модуле курса мы разберем, какие скиллы нужны для более продуктивной работы в команде, Разберем важность проектов в портфолио и CV. А также каждый студент попробует пройти свое первое техническое собеседование, чтобы “прощупать почву”.",
    },
  ];
};
const programsArray = programs(); // вызываем функцию, чтобы получить массив

function Module(module) {
  return `
        <div class="react-item-3__content-wrapper">
          <div class="react-item-3__content-collapse">
            <p class="react-item-3__content-collapse-p">${module.title}</p>
            <button onclick="hide('${module.id2}'); plusOrMinus('${module.id1}')" class="plus" id="${module.id1}"></button>
          </div>
          <div class="react-item-3__content-wrapper-main hide" id="${module.id2}">
            <div class="react-item-3__content-wrapper-para">
              <p>${module.topics}</p>
            </div>
            <span>${module.description}</span>
          </div>
        </div>
      `;
}

const sec = document.querySelector(".react-item-3__content");
programs.forEach((mod) => {
  const moduleSection = Module(mod);
  sec.innerHTML += moduleSection;
});
